#! /usr/bin/env python

import os
import subprocess
import argparse
import json


admin_arn = os.environ.get('ADMIN_ARN')
#env = os.environ.get('ENVIRONMENT')
ecr_account_to_use = os.environ.get('ECR_ACCOUNT_TO_USE')
image_repo = os.environ.get('IMAGE_REPO')
#deployment_name = os.environ.get('DEPLOYMENT_NAME')


def get_image_digests():
    untagged_images = subprocess.check_output(f"""
        awsudo -d 3600 {admin_arn} aws ecr list-images
        --registry-id {ecr_account_to_use}
        --repository-name {image_repo}
        --filter tagStatus=UNTAGGED""".split()
    )
    digests = json.loads(untagged_images)['imageIds']
    return [i['imageDigest'] for i in digests]


def main(delete_all):
    digests = get_image_digests()
    print(digests)






if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Find and delete images in ECR that are failing security scans and are untagged'
    )
    parser.add_argument(
        '--all', dest='delete_all', action='store_true', default=False,
        help='don\'t prompt whether to delete each image, just delete all eligible')
    args = parser.parse_args()

    main(args.delete_all)

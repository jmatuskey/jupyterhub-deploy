#! /usr/bin/env python
#
# Based on ACCOUNT_ID and DEPLOYMENT_NAME environment settings, get credentials
# associated with assuming a secrets repo setup role and print them out as bash
# export statements which can be sourced into a shell script.
#
import os
import subprocess

account = os.environ["ACCOUNT_ID"]
cluster = os.environ["DEPLOYMENT_NAME"]


output = subprocess.check_output(f"aws sts assume-role --role-arn arn:aws:iam::{account}:role/{cluster}-secrets-repo-setup --role-session-name clone".split())

values = eval(output)

key = values["Credentials"]["AccessKeyId"]
secret = values["Credentials"]["SecretAccessKey"]
token = values["Credentials"]["SessionToken"]

print(f"export AWS_ACCESS_KEY_ID={key}")
print(f"export AWS_SECRET_ACCESS_KEY={secret}")
print(f"export AWS_SESSION_TOKEN={token}")

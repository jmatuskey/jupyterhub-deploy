jupyterhub:
  singleuser:
    lifecycleHooks:
      postStart:
        exec:
          command: ["rsync", "/etc/default-home-contents/", "/home/jovyan"]
    extraEnv:
      # CRDS Environment variables
      CRDS_PATH: /home/jovyan/crds_cache
      CRDS_SERVER_URL: https://jwst-serverless.stsci.edu
      CRDS_S3_ENABLED: "1"
      CRDS_S3_RETURN_URI: "0"
      CRDS_MAPPING_URI: "s3://dmd-test-crds/mappings/jwst"
      CRDS_REFERENCE_URI: "s3://dmd-test-crds/references/jwst"
      CRDS_CONFIG_URI: "s3://dmd-test-crds/config/jwst"
      CRDS_USE_PICKLES: "0"
      CRDS_DOWNLOAD_MODE: plugin
      CRDS_DOWNLOAD_PLUGIN: 'crds_s3_get ${SOURCE_URL} ${OUTPUT_PATH} ${FILE_SIZE} ${FILE_SHA1SUM}'
    defaultUrl: "/lab"
    memory:
      guarantee: 512M
      limit: 2G
  proxy:
    https:
      enabled: false
  hub:
    extraConfig:
      jupyterlab: |
        c.Authenticator.admin_users = {'cslocum'}

        from kubespawner.spawner import KubeSpawner
        c.JupyterHub.spawner_class = KubeSpawner
        profiles = [
        {
            "display_name": "WFIRST SIT",
            "kubespawner_override": {
                #"image_spec": "162808325377.dkr.ecr.us-east-1.amazonaws.com/wfirst-sit-user-image",
                #"cpu_guarantee": 1,
                #"cpu_limit": 3,
                #"mem_guarantee": "5G",
                #"mem_limit": "5G"
            }
        }
        ]
        c.KubeSpawner.profile_list = profiles
        c.KubeSpawner.image_pull_policy = "Always"
        c.KubeSpawner.start_timeout = 60 * 10

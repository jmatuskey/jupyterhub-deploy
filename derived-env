#! /bin/bash -eu

# ----------------- derived inputs, nominally don't change --------------
# automatically sourced into setup-env

# Octarine AWS JupyterHub setup
#export ACCOUNT=${ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com
#export ECR_ACCOUNT=${CENTRAL_ECR_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com

if [ "$USE_CENTRAL_ECR" == "true" ]
then
    export ECR_REGISTRY=${CENTRAL_ECR_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com
    export IMAGE_REPO=${DEPLOYMENT_NAME}
    export ECR_ACCOUNT_TO_USE=${CENTRAL_ECR_ACCOUNT_ID}
else
    export ECR_REGISTRY=${ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com
    export IMAGE_REPO=${DEPLOYMENT_NAME}-user-image
    export ECR_ACCOUNT_TO_USE=${ACCOUNT_ID}
fi

export JUPYTERHUB_DIR=`pwd`

export COMMON_REPO=${IMAGE_REPO}

export ADMIN_ARN=arn:aws:iam::${ACCOUNT_ID}:role/${ADMIN_ROLENAME}

export COMMON_DIR=`pwd`/deployments/common/image
export IMAGE_DIR=`pwd`/deployments/${DEPLOYMENT_NAME}/image

if [[ "${PERSONAL_IMAGE}" == "0" ]]; then
    export COMMON_ID=${ECR_REGISTRY}/${COMMON_REPO}:${COMMON_TAG}
    export IMAGE_ID=${ECR_REGISTRY}/${IMAGE_REPO}:${IMAGE_TAG}
else
    export COMMON_ID=${COMMON_REPO}:${COMMON_TAG}
    export IMAGE_ID=${IMAGE_REPO}:${IMAGE_TAG}
fi

export PATH="`pwd`/tools":${PATH}

# --------------- general setup ---------------------------------

export TMOUT=7200
export TF_LOG=TRACE
export TF_LOG_PATH=terraform.log

alias awsu="awsudo -d 3600 $ADMIN_ARN"
alias terraform-init="awsu terraform init -backend-config=./backend.conf -backend-config=./backend.conf"
alias terraform-apply="awsu terraform apply --var-file=${DEPLOYMENT_NAME}.tfvars"
alias terraform-destroy="awsu terraform destroy -var-file=${DEPLOYMENT_NAME}.tfvars"
alias helm-destroy="awsu helm uninstall ${DEPLOYMENT_NAME}-${ENVIRONMENT}"
alias where="echo ${DEPLOYMENT_NAME}-${ENVIRONMENT}"


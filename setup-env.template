
# Clone and customize this for your deployment
#
# NOTE:  must be sourced from jupyterhub-deploy root directory
#

# ----------------- basic inputs,  must set --------------

export DEPLOYMENT_NAME=cluster-name  # roman, jwebbinar, tike
export ENVIRONMENT=sandbox           # sandbox, dev, test, or prod
export USE_FROZEN=0                  # use 0 for loosely pinned package versions, 1 for tagged production build

export ACCOUNT_ID=12345678
export CENTRAL_ECR_ACCOUNT_ID=12345678
export USE_CENTRAL_ECR=false
export ADMIN_ROLENAME=aws-admin-role
export DATADOG_API_KEY_ID=look-in-aws-sm

# Note that unscanned- tags are pushed, pulled, and scanned but
# the unscanned- is dropped from images permitted on the hub by
# virtue of passing ECR scanning.
export IMAGE_TAG=unscanned-latest-${ENVIRONMENT}
export COMMON_TAG=unscanned-common-latest-${ENVIRONMENT}

# ----------------- vvvv less frequently changed vvvv -------------------------------

# Set to 1 for e.g. personal laptop build,  ci build not intended for push,  etc.
export PERSONAL_IMAGE=0

# Select "conda" tool used to install conda package and environments: conda or mamba
#   mamba is largely a drop-in replacement for mamba with improved dependency resolution,
#   parallel downloads, and C++ implementation.
export CONDA_VER=conda

# Additional parameters for image-exec Docker run command, e.g. add mounts here
export IMAGE_RUN_PARS="--rm -e JUPYTER_ENABLE_LAB=yes"

# Image scanning,  report Ubuntu status for this version of Ubuntu
export IMAGE_UBUNTU_NAME="Groovy"

# Image scanning,  report CVE's at this severity level and  higher
export IMAGE_VULNERABILITY_LEVEL="medium"

# ----------------- values derived from basic inputs ---------------------

source derived-env
